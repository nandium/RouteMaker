app: yolo-bouldering

service: yolo-bouldering-database

provider:
  name: aws
  stage: dev
  region: ap-southeast-1

resources:
  Resources:
    RouteDataTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: userEmail
            AttributeType: 'S'
          - AttributeName: createdAt
            AttributeType: 'S'
          - AttributeName: gymLocation
            AttributeType: 'S'
        KeySchema:
          - AttributeName: userEmail
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom._routeDataTable.ReadCapacityUnits.${self:custom.stage}}
          WriteCapacityUnits: ${self:custom._routeDataTable.WriteCapacityUnits.${self:custom.stage}}
        TableName: '${self:service}-${self:custom.stage}-route'
        GlobalSecondaryIndexes:
          - IndexName: gymLocationIndex
            KeySchema:
              - AttributeName: gymLocation
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              NonKeyAttributes:
                - routeName
                - userEmail
                - publicGrade
                - vote
                - commentCount
                - routeURL
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: ${self:custom._routeDataTableGSI.ReadCapacityUnits.${self:custom.stage}}
              WriteCapacityUnits: ${self:custom._routeDataTableGSI.WriteCapacityUnits.${self:custom.stage}}

    GymDataTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: country
            AttributeType: 'S'
          - AttributeName: gymLocation
            AttributeType: 'S'
        KeySchema:
          - AttributeName: country
            KeyType: HASH
          - AttributeName: gymLocation
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom._gymDataTable.ReadCapacityUnits.${self:custom.stage}}
          WriteCapacityUnits: ${self:custom._gymDataTable.WriteCapacityUnits.${self:custom.stage}}
        TableName: '${self:service}-${self:custom.stage}-gym'

    # Keep in the AWS Parameter Store for other services to discover
    SSMParameterRouteDataTableArn:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:custom.stage}/dynamodb/route/arn
        Type: String
        Value:
          Fn::GetAtt:
            - RouteDataTable
            - Arn
        Tags:
          Environment: ${self:custom.stage}
    SSMParameterRouteDataTableName:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:custom.stage}/dynamodb/route/name
        Type: String
        Value: ${self:resources.Resources.RouteDataTable.Properties.TableName}
        Tags:
          Environment: ${self:custom.stage}

    SSMParameterGymDataTableArn:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:custom.stage}/dynamodb/gym/arn
        Type: String
        Value:
          Fn::GetAtt:
            - GymDataTable
            - Arn
        Tags:
          Environment: ${self:custom.stage}
    SSMParameterGymDataTableName:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:custom.stage}/dynamodb/gym/name
        Type: String
        Value: ${self:resources.Resources.GymDataTable.Properties.TableName}
        Tags:
          Environment: ${self:custom.stage}

custom:
  stage: ${opt:stage, self:provider.stage}

  _routeDataTable:
    ReadCapacityUnits:
      dev: 2
      prod: 6
    WriteCapacityUnits:
      dev: 2
      prod: 6
  _routeDataTableGSI:
    ReadCapacityUnits:
      dev: 2
      prod: 4
    WriteCapacityUnits:
      dev: 2
      prod: 4
  _gymDataTable:
    ReadCapacityUnits:
      dev: 1
      prod: 2
    WriteCapacityUnits:
      dev: 1
      prod: 2
